number a

define foo(number a -> number): 
  loop a < 5: 
    a is a + 1
  
  loop i in 1 to 5 by 0.5: 
    a is a + 1

  return a

define bar(number a -> boolean): 
  if true:
    return true
  else:
    return false

define baz(none -> none):
  a is 10
  # return a

define call(none -> number):
  return foo(1)


number b # order of vdecl and fdecl does not matter as long as main comes after

boolean c is bar(1)
baz()
call()
# newname is baz()
# number a is baz()
# none a is baz()