number x is 1 + 2 # blah 

define foo (none -> number):      # maybe? 
  number y is 10       
  return y

define bar (number a, number b -> boolean):    
  return a == b          
           
define egg (boolean b, number n1, number n2 -> string): 
  if not b:
    number a is 0
    loop not b:    # this 
      a is a + n1 + n2 # please? 
    return "b is false"
  else:
    if -n1 > -n2:
      return "n2 is greater"
    else:
      return "n2 is not greater"

define dog (none -> none): 
  number a is 0
  
  loop i in 0 to 10:
    a is a + 1
  
  loop i in 0 to 10 by 2:
    a is a + 5

foo()

x
x is 7

a[5] is [1, 2, 3, 4, 5]
b[6] is [1, 2, 3, 4, 5, 6]

number c[3]

number d[4] is [1, 2, 3, 4]

# number e[5][4]

# f[1][1] is [[5]]

e is f

# number g[5] is a

num1 is num1 % 5 % 6

if this:
  that()

number something is 100